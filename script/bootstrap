#!/bin/bash

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)

# Make newline the file seperator for the a loop
IFS=$'\n'

link_file () {
  local src=$1 dst=$2

  local overwrite_all=false backup_all=false
  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
    local currentSrc="$(readlink $dst)"

    if [ "$currentSrc" == "$src" ]; then
      skip=true;
    else
      echo "File already exists: $dst ($(basename "$src")), what do you want to do?"
      echo "  [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
      read -n 1 action

      case "$action" in
        o )
          overwrite=true;;
        O )
          overwrite_all=true;;
        b )
          backup=true;;
        B )
          backup_all=true;;
        s )
          skip=true;;
        S )
          skip_all=true;;
        * )
          ;;
      esac
    fi

    if [ "$overwrite" == "true" ]; then
      rm -rf "$dst"
      echo "removed $dst"
    fi

    if [ "$backup" == "true" ]; then
      mv "$dst" "${dst}.backup"
      echo "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]; then
      echo "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]; then
    ln -s "$1" "$2"
    echo "linked $1 to $2"
  fi
}

ls_dotfiles () {
  find -H "$DOTFILES_ROOT" \
    -type f \
    -wholename '*.*' \
    -not -path '*.git/*' \
    -not -name '.DS_Store' \
    -not -name '.gitignore' \
    -not -name 'README.md'
}

install_dotfiles () {
  for src in $(ls_dotfiles); do
    relative=${src/"$DOTFILES_ROOT"/''}
    link_file "$src" "$HOME$relative"
  done
}

install_dotfiles
